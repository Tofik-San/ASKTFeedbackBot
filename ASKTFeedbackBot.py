import os
from fastapi import FastAPI, Request
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, ContextTypes, MessageHandler, filters
from openai import OpenAI

BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

app = FastAPI()
telegram_app = Application.builder().token(BOT_TOKEN).build()
client = OpenAI(api_key=OPENAI_API_KEY)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_mode = {}
completed_users = set()

# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
mode_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton("–ë–∏–∑–Ω–µ—Å")], [KeyboardButton("–£—á—ë–±–∞")],
              [KeyboardButton("–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥")], [KeyboardButton("–†–∞–±–æ—Ç–∞")]],
    resize_keyboard=True, one_time_keyboard=True
)

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º—Ç
system_prompt_base = """–¢—ã ‚Äî –∞–¥–º–∏–Ω-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã —Å –æ–¥–Ω–∏–º –∏–∑ —á–µ—Ç—ã—Ä—ë—Ö GPT-–±–æ—Ç–æ–≤: ¬´–ë–∏–∑–Ω–µ—Å¬ª, ¬´–£—á—ë–±–∞¬ª, ¬´–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥¬ª, ¬´–†–∞–±–æ—Ç–∞¬ª.

üéØ –¢–≤–æ—è –∑–∞–¥–∞—á–∞:
‚Äî –ü—Ä–∏–Ω—è—Ç—å –æ—Ç–∑—ã–≤.
‚Äî –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –ø–æ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É —Ç–æ–Ω—É –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é.
‚Äî –í—ã–¥–∞—Ç—å –æ–¥–Ω—É –∫–æ—Ä–æ—Ç–∫—É—é —Ä–µ–∞–∫—Ü–∏—é, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—Ç–∏–ª—é –æ—Ç–∑—ã–≤–∞.

üìå –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –∏–º–µ–µ—à—å –ø—Ä–∞–≤–æ –∑–∞–¥–∞—Ç—å:
–ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω –±–æ—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–±–æ—Ç–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (`mode`), —Å–Ω–∞—á–∞–ª–∞ —Å–ø—Ä–æ—Å–∏:
"–° –∫–∞–∫–∏–º –±–æ—Ç–æ–º —Ä–∞–±–æ—Ç–∞–ª(–∞): –±–∏–∑–Ω–µ—Å, —É—á—ë–±–∞, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏–ª–∏ —Ä–∞–±–æ—Ç–∞?"  
–î–æ–∂–¥–∏—Å—å –æ—Ç–≤–µ—Ç–∞. –ó–∞—Ç–µ–º ‚Äî —Å—Ä–µ–∞–≥–∏—Ä—É–π. –ë–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–µ—à—å.

üß∑ –ò—Ç–æ–≥:
–ö–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç ‚Äî –∫–∞–∫ —Ä–µ–∞–∫—Ü–∏—è –∂–∏–≤–æ–≥–æ, –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞. –ú–µ—Ç–∫–æ. –ö–æ—Ä–æ—Ç–∫–æ. –ë–µ–∑ —Ü–µ—Ä–µ–º–æ–Ω–∏–π. –¢–æ–ª—å–∫–æ —Ä–µ–∞–∫—Ü–∏—è. –ë–µ–∑ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–π.
"""

# GPT –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
async def process_text_with_gpt(user_text: str, mode: str) -> str:
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": system_prompt_base},
            {"role": "user", "content": f"Mode: {mode}\n–û—Ç–∑—ã–≤: {user_text}"}
        ]
    )
    return response.choices[0].message.content.strip()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
@telegram_app.message_handler(filters.TEXT & filters.Regex("^(–ë–∏–∑–Ω–µ—Å|–£—á—ë–±–∞|–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥|–†–∞–±–æ—Ç–∞)$"))
async def handle_mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id in completed_users:
        return
    user_mode[user_id] = update.message.text
    await update.message.reply_text("–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤.", reply_markup=None)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∑—ã–≤–∞
@telegram_app.message_handler(filters.TEXT)
async def handle_feedback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_text = update.message.text.strip()

    if user_id in completed_users:
        return

    if user_id not in user_mode:
        await update.message.reply_text(
            "–° –∫–∞–∫–∏–º –±–æ—Ç–æ–º —Ä–∞–±–æ—Ç–∞–ª(–∞): –±–∏–∑–Ω–µ—Å, —É—á—ë–±–∞, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏–ª–∏ —Ä–∞–±–æ—Ç–∞?",
            reply_markup=mode_keyboard
        )
        return

    mode = user_mode.get(user_id)
    gpt_reply = await process_text_with_gpt(user_text, mode)
    await update.message.reply_text(gpt_reply)

    completed_users.add(user_id)
    user_mode.pop(user_id, None)

# Webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞
@app.post("/")
async def webhook(request: Request):
    data = await request.json()
    await telegram_app.update_queue.put(Update.de_json(data, telegram_app.bot))
    return {"ok": True}
