import os
from fastapi import FastAPI, Request
from telegram import (
    Bot, Update, InlineKeyboardButton, InlineKeyboardMarkup, ChatPermissions
)
from telegram.ext import (
    Application, ContextTypes, CommandHandler, MessageHandler,
    filters, CallbackQueryHandler
)

TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_ID = "@ASKT_Feedback"

app = FastAPI()
bot_app = Application.builder().token(TOKEN).build()


# üëâ –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üëç –ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å", callback_data="like")],
        [InlineKeyboardButton("üëé –ù–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å", callback_data="dislike")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –û—Å—Ç–∞–≤—å –æ—Ç–∑—ã–≤ –æ –∫–∞–Ω–∞–ª–µ:", reply_markup=reply_markup)


# üëâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "like":
        await query.edit_message_text("–û—Ç–ª–∏—á–Ω–æ! –ù–∞–ø–∏—à–∏, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å.")
    elif query.data == "dislike":
        await query.edit_message_text("–°–ø–∞—Å–∏–±–æ! –ù–∞–ø–∏—à–∏, —á—Ç–æ –±—ã–ª–æ –Ω–µ —Ç–∞–∫.")


# üëâ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Ñ–ª—É–¥/–∑–∞–ø—Ä–µ—â—ë–Ω–∫—É
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    user_id = update.message.from_user.id

    bad_words = ["—Ö—É–π", "–ø–∏–∑–¥–∞", "–µ–±–ª–∞–Ω", "—Å—É–∫–∞"]
    if any(word in text for word in bad_words) or len(text) > 300:
        await context.bot.ban_chat_member(chat_id=update.message.chat_id, user_id=user_id)
        await context.bot.send_message(chat_id=update.message.chat_id,
                                       text="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ.")
        return

    await context.bot.send_message(chat_id=CHANNEL_ID,
                                   text=f"‚úç –û—Ç–∑—ã–≤ –æ—Ç @{update.message.from_user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'}:\n\n{text}")


# üëâ Webhook-–æ–±—Ä–∞–±–æ—Ç–∫–∞
@app.post("/")
async def webhook(request: Request):
    data = await request.json()
    print(data)  # –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è –ª–æ–≥–æ–≤ Railway

    update = Update.de_json(data, bot_app.bot)
    await bot_app.initialize()
    await bot_app.process_update(update)
    return {"ok": True}


# üëâ –†–æ—É—Ç–∏–Ω–≥
bot_app.add_handler(CommandHandler("start", start))
bot_app.add_handler(CallbackQueryHandler(button_handler))
bot_app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))
